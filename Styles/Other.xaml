<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:m3="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="Tag2Style" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Secondary.Light}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="Margin" Value="5,0,2,0" />
        <!-- 设置触发器 -->
        <Style.Triggers>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.CheckBox.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimpleToolTipStyle" TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Card.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <Style x:Key="MouseOverPathStyleInStackPanel" TargetType="Path">
        <Setter Property="Tag" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <Setter Property="Fill" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}"
                Value="True">
                <Setter Property="Fill" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            </DataTrigger>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill"
                        Value="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={x:Static m3:BrushOpacityConverter.Instance}, ConverterParameter=0.13}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MouseOverPathStyleInGrid" TargetType="Path">
        <Setter Property="Tag" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <Setter Property="Fill" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                Value="True">
                <Setter Property="Fill" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            </DataTrigger>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill"
                        Value="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={x:Static m3:BrushOpacityConverter.Instance}, ConverterParameter=0.13}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock -->
    <Style x:Key="StyleTextBlock2" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
        <Setter Property="FontSize" Value="13" />
        <!-- 设置触发器 -->
        <Style.Triggers>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.CheckBox.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock -->
    <Style x:Key="StyleTextBlock3" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
        <Setter Property="FontSize" Value="13" />
        <!-- 设置触发器 -->
        <Style.Triggers>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.CheckBox.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <m3:BrushOpacityConverter x:Key="BrushOpacityConverter" />

    <Style x:Key="StyleBorder2" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
        <!-- 设置触发器 -->
        <Style.Triggers>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="M3ChoiceChipPrimaryListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.TextBox.FilledBackground}" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={x:Static m3:BrushOpacityConverter.Instance}, ConverterParameter=0.13}" />
                <Setter Property="m3:RippleAssist.Feedback"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
            </Trigger>
            <!-- 当 IsEnabled=False 时更改前景色 -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Secondary.Light}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="M3ChoiceChipPrimaryListBox" TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource MaterialDesignChoiceChipListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource M3ChoiceChipPrimaryListBoxItem}" />
    </Style>

    <Style x:Key="Md3ToolToggleListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.ListBoxItem.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="14,6,14,6" />
        <Setter Property="Height" Value="34" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.03"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="SelectedBackgroundBorder"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="*" To="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="SelectedBackgroundBorder"
                                                Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Selected" To="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Background="{TemplateBinding Foreground, Converter={x:Static m3:BrushRoundConverter.Instance}}"
                                    Opacity="0" />
                            <Border x:Name="SelectedBackgroundBorder"
                                    Background="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                                    Opacity="0" />
                            <m3:Ripple x:Name="Ripple"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                       Feedback="{TemplateBinding Foreground, Converter={x:Static m3:BrushRoundConverter.Instance}}"
                                       Focusable="False"
                                       Opacity=".56"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="SelectedBorder"
                                    BorderBrush="{DynamicResource MaterialDesign.Brush.ListBoxItem.Selected}"
                                    BorderThickness="0"
                                    Opacity="0"
                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=SelectionMode, Converter={x:Static m3:EqualityToVisibilityConverter.Instance}, ConverterParameter={x:Static SelectionMode.Extended}, Mode=OneWay}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Ripple" Property="Opacity" Value=".92" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    </Style>

</ResourceDictionary>